@using Microsoft.FluentUI.AspNetCore.Components.DesignTokens
@inherits LayoutComponentBase
@inject BaseLayerLuminance BaseLayerLuminance

<PageTitle>あびや</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 auth" style="background-color:var(--fill-color)">
            <LoginDisplay />
            <FluentSwitch @bind-Value="@IsDark" @ref="@Switch"  />
        </div>

        <article class="content px-4">
            @Body
            <FluentKeyCodeProvider />
        </article>
    </main>
</div>

@code {
    private bool IsDarkMode { get; set; } = false;

    public static FluentSwitch? Switch { get; set; }

    private async Task OnChange(ChangeEventArgs e)
    {
        if (!IsDarkMode)
        {
            await BaseLayerLuminance.SetValueFor(App.DesignSystemProvider!.Element, 0.15f);
        }
        else
        {
            await BaseLayerLuminance.SetValueFor(App.DesignSystemProvider!.Element, 0.98f);
        }
        StateHasChanged();
    }

    public static bool DarkMode = false; 

    public bool IsDark
    {
        get => DarkMode;
        set
        {
            DarkMode = value;

            if (value)
            {
                //BaseLayerLuminance.WithDefault(StandardLuminance.DarkMode.GetLuminanceValue());
                BaseLayerLuminance.SetValueFor(App.DesignSystemProvider!.Element, StandardLuminance.DarkMode.GetLuminanceValue());
            }
            else
            {
                //BaseLayerLuminance.WithDefault(StandardLuminance.LightMode.GetLuminanceValue());
                BaseLayerLuminance.SetValueFor(App.DesignSystemProvider!.Element, StandardLuminance.LightMode.GetLuminanceValue());
            }
            StateHasChanged();
        }
    }

    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsDarkMode = false;
            if (IsDarkMode)
            {
                await BaseLayerLuminance.SetValueFor(App.DesignSystemProvider!.Element, 0.15f);
            }
            else
            {
                await BaseLayerLuminance.SetValueFor(App.DesignSystemProvider!.Element, 0.98f);
            }
            StateHasChanged();

            
        }
    }
}